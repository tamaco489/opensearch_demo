// Package gen provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package gen

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for ReportReason.
const (
	Fake          ReportReason = "fake"
	Inappropriate ReportReason = "inappropriate"
	Irrelevant    ReportReason = "irrelevant"
	Other         ReportReason = "other"
)

// Addresses defines model for Addresses.
type Addresses struct {
	// City 市区町村
	City string `json:"city"`

	// Other その他住所
	Other string `json:"other"`

	// Prefecture 都道府県
	Prefecture string `json:"prefecture"`

	// Region 地域
	Region string `json:"region"`

	// Street 町域
	Street string `json:"street"`

	// ZipCode ユーザーの郵便番号（XXX-XXXX形式）
	ZipCode string `json:"zip_code"`
}

// ChargeHistories 注文履歴のレスポンスオブジェクト
type ChargeHistories struct {
	// Histories 注文履歴のリスト
	Histories []GetChargeHistories `json:"histories"`

	// Metadata ページネーションに関連するメタデータ
	Metadata ChargeHistoriesLimitOffset `json:"metadata"`
}

// GetChargeHistories defines model for .
type GetChargeHistories struct {
	// ChargeAmount 請求金額
	ChargeAmount float32 `json:"charge_amount"`

	// ChargeDate 請求日時
	ChargeDate time.Time `json:"charge_date"`

	// ChargeId 注文ID
	ChargeId string `json:"charge_id"`

	// Products 注文IDに紐づく商品のリスト
	Products []GetChargeHistoriesProducts `json:"products"`
}

// ChargeHistoriesLimitOffset ページネーションに関連するメタデータ
type ChargeHistoriesLimitOffset struct {
	// HasMore 次のページが存在するかどうか
	HasMore bool `json:"has_more"`

	// Limit 1ページあたりのアイテム数
	Limit int `json:"limit"`

	// Offset 現在のページの開始位置
	Offset int `json:"offset"`

	// TotalCount 履歴情報の総件数
	TotalCount int `json:"total_count"`
}

// CommentByID defines model for CommentByID.
type CommentByID struct {
	// Content コメントの本文
	Content string `json:"content"`

	// CreatedAt コメントの投稿日時（ISO 8601形式, JST）
	CreatedAt time.Time `json:"created_at"`

	// Id コメントの一意なID
	Id uint64 `json:"id"`

	// ProductId 商品ID
	ProductId uint64 `json:"product_id"`

	// Rate 商品に対する評価（1〜5の整数）
	Rate uint32 `json:"rate"`

	// ReportReasons コメントに対して報告された理由
	ReportReasons []ReportReason `json:"report_reasons"`

	// Title コメントのタイトル
	Title string `json:"title"`

	// User コメントを投稿したユーザー情報
	User CommentByUser `json:"user"`
}

// CommentByUser コメントを投稿したユーザー情報
type CommentByUser struct {
	// AvatarUrl ユーザーのアバター画像URL
	AvatarUrl string `json:"avatar_url"`

	// UserId ユーザーの一意なID
	UserId uint64 `json:"user_id"`

	// UserName ユーザーの表示名
	UserName string `json:"user_name"`
}

// Comments defines model for Comments.
type Comments struct {
	// Comments 商品に対するコメント一覧
	Comments []GetProductComments         `json:"comments"`
	Metadata GetProductCommentsNextCursor `json:"metadata"`
}

// GetProductComments defines model for .
type GetProductComments struct {
	// Content コメントの本文
	Content string `json:"content"`

	// CreatedAt コメントの投稿日時（ISO 8601形式, JST）
	CreatedAt time.Time `json:"created_at"`

	// Id コメントの一意なID
	Id uint64 `json:"id"`

	// LikeCount いいねの数
	LikeCount uint64 `json:"like_count"`

	// ReportReasons コメントに対して報告された理由
	ReportReasons []ReportReason `json:"report_reasons"`

	// Title コメントのタイトル
	Title string `json:"title"`

	// User コメントを投稿したユーザー情報
	User CommentByUser `json:"user"`
}

// GetProductCommentsNextCursor defines model for .
type GetProductCommentsNextCursor struct {
	// NextCursor 次ページへのカーソル（コメントIDをBase64にエンコードした値）
	NextCursor string `json:"next_cursor"`
}

// CreateChargeRequest defines model for CreateChargeRequest.
type CreateChargeRequest struct {
	// ReservationId 注文を実行するための予約ID。予約APIで生成された一意のID。
	ReservationId string `json:"reservation_id"`
}

// CreateCreditCard defines model for CreateCreditCard.
type CreateCreditCard struct {
	// IsDefault 登録するカードをデフォルトとして設定するか
	IsDefault bool `json:"is_default"`

	// Token フロントエンドで登録済みのカード情報に紐付く一意のトークン。
	// セキュアに生成され、カード番号などの生データを含まない形式。
	Token string `json:"token"`
}

// CreateCustomerResponse defines model for CreateCustomerResponse.
type CreateCustomerResponse struct {
	// Id 顧客ID
	Id string `json:"id"`
}

// CreateProductCommentRequest defines model for CreateProductCommentRequest.
type CreateProductCommentRequest struct {
	// Content コメントの本文
	Content string `json:"content"`

	// Rate 商品に対する評価（1〜5の整数）
	Rate uint32 `json:"rate"`

	// Title コメントのタイトル
	Title string `json:"title"`
}

// CreateProductCommentResponse defines model for CreateProductCommentResponse.
type CreateProductCommentResponse struct {
	// Id 投稿したコメントID
	Id uint64 `json:"id"`
}

// CreateUserResponse ユーザ新規登録APIのレスポンス
type CreateUserResponse struct {
	// UserId user_idを返却します。
	UserId int64 `json:"user_id"`
}

// CustomerByUserID defines model for CustomerByUserID.
type CustomerByUserID struct {
	// Id 顧客ID
	Id string `json:"id"`
}

// GetChargeHistoriesProducts 注文IDに紐づく商品のリスト
type GetChargeHistoriesProducts struct {
	// ProductId 商品ID
	ProductId string `json:"product_id"`

	// ProductName 商品名
	ProductName string `json:"product_name"`

	// Quantity 商品の数量
	Quantity int `json:"quantity"`

	// UnitPrice 商品1つあたりの価格
	UnitPrice float32 `json:"unit_price"`
}

// GetCreditCards defines model for GetCreditCards.
type GetCreditCards = []CreditCardList

// CreditCardList defines model for .
type CreditCardList struct {
	// IsDefault デフォルトのクレジットカードかどうか
	IsDefault bool `json:"is_default"`

	// MaskedCardNumber マスキングされたカード番号（***** + 下3桁）
	MaskedCardNumber string `json:"masked_card_number"`
}

// GetMyCommentByIDResponse defines model for GetMyCommentByIDResponse.
type GetMyCommentByIDResponse struct {
	// Content コメントの本文
	Content string `json:"content"`

	// CreatedAt コメントの投稿日時（ISO 8601形式, JST）
	CreatedAt time.Time `json:"created_at"`

	// Id コメントの一意なID
	Id uint64 `json:"id"`

	// LikeCount いいねの数
	LikeCount uint64 `json:"like_count"`

	// ReportReasons コメントに対して報告された理由
	ReportReasons []ReportReason `json:"report_reasons"`

	// Title コメントのタイトル
	Title string `json:"title"`
}

// HealthCheck HealthCheckのレスポンス
type HealthCheck struct {
	// Message メッセージ。通常はok
	Message string `json:"message"`
}

// Me defines model for Me.
type Me struct {
	// UserId 登録した自身のユーザーIDを返却
	UserId int64 `json:"user_id"`
}

// Name defines model for Name.
type Name struct {
	// FirstName ユーザーの名前
	FirstName string `json:"first_name"`

	// FirstNameRoman ユーザーの名前 (ローマ字表記)
	FirstNameRoman string `json:"first_name_roman"`

	// LastName ユーザーの姓
	LastName string `json:"last_name"`

	// LastNameRoman ユーザーの姓 (ローマ字表記)
	LastNameRoman string `json:"last_name_roman"`
}

// ProductByID defines model for ProductByID.
type ProductByID struct {
	// CategoryId カテゴリID
	CategoryId int32 `json:"category_id"`

	// CategoryName カテゴリ名
	CategoryName string `json:"category_name"`

	// Description 商品の説明
	Description string `json:"description"`

	// DiscountFlag 割引キャンペーン対象か否か
	DiscountFlag bool `json:"discount_flag"`

	// DiscountName 割引キャンペーン名称
	DiscountName string `json:"discount_name"`

	// DiscountRate 割引率（%）
	DiscountRate int32 `json:"discount_rate"`

	// DiscountedPrice 割引後の価格（税込、日本円）
	DiscountedPrice float32 `json:"discounted_price"`

	// Id 商品ID
	Id int32 `json:"id"`

	// ImageUrl 商品イメージのURL
	ImageUrl string `json:"image_url"`

	// Name 商品名
	Name string `json:"name"`

	// Price 定価（税込、日本円）
	Price float32 `json:"price"`

	// Rate 商品に対するユーザの評価（1〜5の整数）
	Rate uint32 `json:"rate"`

	// StockQuantity 在庫数
	StockQuantity int32 `json:"stock_quantity"`

	// VipOnly VIP限定の商品か否か
	VipOnly bool `json:"vip_only"`
}

// Products defines model for Products.
type Products struct {
	Metadata ProductNextCursor `json:"metadata"`
	Products []GetProducts     `json:"products"`
}

// ProductNextCursor defines model for .
type ProductNextCursor struct {
	// NextCursor 次ページへのカーソル
	NextCursor string `json:"next_cursor"`
}

// GetProducts defines model for .
type GetProducts struct {
	// CategoryId カテゴリID
	CategoryId int32 `json:"category_id"`

	// CategoryName カテゴリ名
	CategoryName string `json:"category_name"`

	// Description 商品の説明
	Description string `json:"description"`

	// DiscountFlag 割引キャンペーン対象か否か
	DiscountFlag bool `json:"discount_flag"`

	// DiscountName 割引キャンペーン名称
	DiscountName string `json:"discount_name"`

	// DiscountRate 割引率（%）
	DiscountRate int32 `json:"discount_rate"`

	// DiscountedPrice 割引後の価格（税込、日本円）
	DiscountedPrice float32 `json:"discounted_price"`

	// Id 商品ID
	Id int32 `json:"id"`

	// ImageUrl 商品イメージのURL
	ImageUrl string `json:"image_url"`

	// Name 商品名
	Name string `json:"name"`

	// Price 定価（税込、日本円）
	Price float32 `json:"price"`

	// Rate 商品に対するユーザの評価（1〜5の整数）
	Rate uint32 `json:"rate"`

	// StockQuantity 在庫数
	StockQuantity int32 `json:"stock_quantity"`

	// VipOnly VIP限定の商品か否か
	VipOnly bool `json:"vip_only"`
}

// Profile defines model for Profile.
type Profile struct {
	Address Addresses `json:"address"`

	// Birthdate ユーザーの生年月日（YYYY-MM-DD形式）
	Birthdate openapi_types.Date `json:"birthdate"`

	// ImageUrl ユーザーのプロフィール画像のURL
	ImageUrl string `json:"image_url"`
	Name     Name   `json:"name"`
}

// ReportReason コメントに対する報告理由
type ReportReason string

// ReservationRequest 商品IDと個数のセット
type ReservationRequest = []struct {
	// ProductId 予約対象となる商品ID
	ProductId int `json:"product_id"`

	// Quantity 予約する商品の個数
	Quantity int `json:"quantity"`
}

// ReservationResponse 予約作成のレスポンスオブジェクト
type ReservationResponse struct {
	// ReservationId 作成された予約の一意なID
	ReservationId string `json:"reservation_id"`
}

// UpdateProductCommentRequest defines model for UpdateProductCommentRequest.
type UpdateProductCommentRequest struct {
	// Content コメントの本文
	Content string `json:"content"`

	// Rate 商品に対する評価（1〜5の整数）
	Rate uint32 `json:"rate"`

	// Title コメントのタイトル
	Title string `json:"title"`
}

// Violations defines model for Violations.
type Violations struct {
	Metadata GetProductCommentViolationsNextCursor `json:"metadata"`

	// NgComments 商品に対するコメント違反一覧
	NgComments []GetProductCommentViolations `json:"ng_comments"`
}

// GetProductCommentViolationsNextCursor defines model for .
type GetProductCommentViolationsNextCursor struct {
	// NextCursor 次ページへのカーソル（コメントIDをBase64にエンコードした値）
	NextCursor string `json:"next_cursor"`
}

// GetProductCommentViolations defines model for .
type GetProductCommentViolations struct {
	// Content コメントの本文
	Content string `json:"content"`

	// CreatedAt コメントの投稿日時（ISO 8601形式, JST）
	CreatedAt time.Time `json:"created_at"`

	// Id コメントの一意なID
	Id uint64 `json:"id"`

	// ProductId 商品ID
	ProductId uint64 `json:"product_id"`

	// Rate 商品に対する評価（1〜5の整数）
	Rate uint32 `json:"rate"`

	// ReportReasons コメントに対して報告された理由
	ReportReasons []ReportReason `json:"report_reasons"`

	// Title コメントのタイトル
	Title string `json:"title"`

	// User コメントを投稿したユーザー情報
	User CommentByUser `json:"user"`
}

// GetProductCommentViolationsParams defines parameters for GetProductCommentViolations.
type GetProductCommentViolationsParams struct {
	// Cursor 次のページの商品コメント違反一覧を取得するためのカーソル。
	// カーソルはコメントIDをbase64でエンコードした文字列を指定する。
	Cursor *string `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit 取得する商品コメント違反情報数を指定。
	// デフォルトは10。1度に最大20件まで取得可能。
	Limit *uint64 `form:"limit,omitempty" json:"limit,omitempty"`
}

// GetChargeHistoriesParams defines parameters for GetChargeHistories.
type GetChargeHistoriesParams struct {
	// Offset 取得を開始する注文のインデックス。最初のページは0を指定。
	// オフセットは0から始め、次のページのデータを取得する際にはページサイズ（`limit`）を加算していきます。
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit 取得する注文履歴の数を指定。デフォルトは10、最大で20件まで指定可能。
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`
}

// GetProductsParams defines parameters for GetProducts.
type GetProductsParams struct {
	// Cursor 次のページの商品情報一覧を取得するためのカーソル。
	// カーソルは商品IDをbase64でエンコードした文字列を指定する。
	Cursor *string `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit 取得する商品情報数を指定。
	// デフォルトは10。1度に最大20件まで取得可能。
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`
}

// GetProductCommentsParams defines parameters for GetProductComments.
type GetProductCommentsParams struct {
	// Cursor 次のページの商品コメント一覧を取得するためのカーソル。
	// カーソルはコメントIDをbase64でエンコードした文字列を指定する。
	Cursor *string `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit 取得する商品情報数を指定。
	// デフォルトは10。1度に最大20件まで取得可能。
	Limit *uint64 `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateCreditCardJSONRequestBody defines body for CreateCreditCard for application/json ContentType.
type CreateCreditCardJSONRequestBody = CreateCreditCard

// CreateChargeJSONRequestBody defines body for CreateCharge for application/json ContentType.
type CreateChargeJSONRequestBody = CreateChargeRequest

// CreateReservationJSONRequestBody defines body for CreateReservation for application/json ContentType.
type CreateReservationJSONRequestBody = ReservationRequest

// CreateProductCommentJSONRequestBody defines body for CreateProductComment for application/json ContentType.
type CreateProductCommentJSONRequestBody = CreateProductCommentRequest

// UpdateProductMyCommentJSONRequestBody defines body for UpdateProductMyComment for application/json ContentType.
type UpdateProductMyCommentJSONRequestBody = UpdateProductCommentRequest

// CreateProfileJSONRequestBody defines body for CreateProfile for application/json ContentType.
type CreateProfileJSONRequestBody = Profile
